"""Tests for SKiDL generator functions"""
import unittest
from unittest.mock import Mock
from generator import generate

class TestGenerator(unittest.TestCase):
    """Tests for SKiDL generator functions"""
    def test_esp12e(self):
        """Test basic generation case with ESP-12E"""
        wizard = Mock()
        wizard.field.return_value = False
        self.assertEqual(
            generate({'mcu':'ESP-12E',
                      'mcu_footprint':'RF_Module:ESP-12E',
                      'mcurail':'+VBatt'}, wizard),
            '''
#Generated by Swimibowi - SKiDL Microcontroller Board Wizard
"""Creates Kicad netlist file for a microcontroller board"""
from skidl import Bus, Part, Net, generate_netlist

U1 = Part('RF_Module', 'ESP-12E', footprint='RF_Module:ESP-12E')

NETS = {}
NETS['+VBatt'] = Net('+VBatt')
NETS['+VBus'] = Net('+VBus')
NETS['+3V'] = Net('+3V')
NETS['+3V3'] = Net('+3V3')
NETS['+5V'] = Net('+5V')
NETS['GND'] = Net('GND')

U1['VCC'] += NETS['+VBatt']
U1['GND'] += NETS['GND']
U1['EN'] += NETS['+VBatt']
U1['GPIO15'] += NETS['GND']

generate_netlist()
'''
        )

if __name__ == '__main__':
    unittest.main()
